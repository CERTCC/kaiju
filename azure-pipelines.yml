schedules:
- cron: "0 12 * * 0"
  displayName: Weekly Sunday build
  branches:
    include:
    - main
  always: true

jobs:
- job: Build_Kaiju
  variables:
    GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle
    AUTOCATS_DIR: $(Pipeline.Workspace)/autocats
    GRADLE_VERSION: gradle-6.8.3
    GRADLE_URL: https://services.gradle.org/distributions/$(GRADLE_VERSION)-bin.zip
    GRADLE_INSTALL_DIR: $(Pipeline.Workspace)/gradle
  strategy:
    matrix:
      ghidra-git:
        ghidraVersion: "master"
      ghidra923:
        ghidraUrl: "https://ghidra-sre.org/ghidra_9.2.3_PUBLIC_20210325.zip"
        ghidraVersion: "9.2.3"
      ghidra922:
        ghidraUrl: "https://ghidra-sre.org/ghidra_9.2.2_PUBLIC_20201229.zip"
        ghidraVersion: "9.2.2"
      ghidra921:
        ghidraUrl: "https://ghidra-sre.org/ghidra_9.2.1_PUBLIC_20201215.zip"
        ghidraVersion: "9.2.1"
      ghidra92:
        ghidraUrl: "https://ghidra-sre.org/ghidra_9.2_PUBLIC_20201113.zip"
        ghidraVersion: "9.2"
      ghidra912:
        ghidraUrl: "https://ghidra-sre.org/ghidra_9.1.2_PUBLIC_20200212.zip"
        ghidraVersion: "9.1.2"
      ghidra911:
        ghidraUrl: "https://ghidra-sre.org/ghidra_9.1.1_PUBLIC_20191218.zip"
        ghidraVersion: "9.1.1"
      ghidra91:
        ghidraUrl: "https://ghidra-sre.org/ghidra_9.1_PUBLIC_20191023.zip"
        ghidraVersion: "9.1"
  pool:
    vmImage: 'Ubuntu-20.04'
  steps:

  - script: |
      echo "##vso[task.setvariable variable=JAVA_HOME]$(JAVA_HOME_11_X64)"
      echo "##vso[task.setvariable variable=PATH]$(JAVA_HOME_11_X64)/bin:$(PATH)"
    displayName: "Set java version"

  - task: Cache@2
    condition: and(succeeded(), ne(variables['ghidraUrl'], ''))
    inputs:
      key: '"$(ghidraUrl)" | binary'
      path: $(Pipeline.Workspace)/zip
    displayName: Cache ghidra binary

  - task: Cache@2
    inputs:
      key: 'gradle | "$(Agent.OS)" | "$(System.Job.DisplayName)"'
      restoreKeys: gradle
      path: $(GRADLE_USER_HOME)
    displayName: Gradle build cache
  - task: Cache@2
    inputs:
      key: '"$(AUTOCATS_DIR)" | autocats'
      path: $(AUTOCATS_DIR)
    displayName: Cache AUTOCATS

  - task: Cache@2
    inputs:
      key: '"$(GRADLE_URL)" | gradle'
      path: $(GRADLE_INSTALL_DIR)
    displayName: Cache Gradle 6.x

  - bash: |
      set -e
      test -d zip || (mkdir zip && cd zip && wget $URL)
      unzip zip/*.zip
    condition: and(succeeded(), ne(variables['ghidraUrl'], ''))
    workingDirectory: $(Pipeline.Workspace)
    displayName: Download Ghidra binary from $(ghidraUrl)
    env:
      URL: $(ghidraUrl)
  - bash: |
      set -e
      sudo apt-get -y install bison flex xvfb
      git clone --depth 1 https://github.com/NationalSecurityAgency/ghidra
    condition: and(succeeded(), eq(variables['ghidraUrl'], ''))
    workingDirectory: $(Pipeline.Workspace)
    env:
      WS: $(Pipeline.Workspace)
    displayName: Download and build Ghidra from git part 1

  - task: Cache@2
    inputs:
      key: 'gradle deps'
      path: $(Pipeline.Workspace)/ghidra/build/downloads
    condition: and(succeeded(), eq(variables['ghidraUrl'], ''))

  - bash: |
      echo "##vso[task.prependpath]$(GRADLE_INSTALL_DIR)/$(GRADLE_VERSION)/bin"
      test -d $(GRADLE_INSTALL_DIR) && exit 0
      wget $(GRADLE_URL) -O gradle.zip
      unzip -d $(GRADLE_INSTALL_DIR) gradle.zip
      rm gradle.zip
    workingDirectory: $(Pipeline.Workspace)
    displayName: Download gradle 6.x binary from $(GRADLE_URL)
  - bash: |
      set -e
      cd ghidra
      which gradle
      gradle --build-cache --init-script gradle/support/fetchDependencies.gradle init
      gradle --build-cache buildGhidra -x ip
      mkdir -p $WS/zip
      cp build/dist/*.zip $WS/zip/
      cd $WS
      unzip zip/*.zip
    condition: and(succeeded(), eq(variables['ghidraUrl'], ''))
    workingDirectory: $(Pipeline.Workspace)
    env:
      WS: $(Pipeline.Workspace)
    displayName: Download and build Ghidra from git part 2
  - bash: |
      set -e
      GHIDRA_INSTALL_DIR=$(find $WS -maxdepth 1 -type d -name 'ghidra_*') gradle --build-cache
    displayName: Build Kaiju extension and plugins
    workingDirectory: .
    env:
      WS: $(Pipeline.Workspace)
  - bash: |
      test -d $AUTOCATS_DIR || git clone https://github.com/cmu-sei/autocats $AUTOCATS_DIR
    displayName: Download AUTOCATS
  - bash: |
      set -e
      # Needs a head
      Xvfb :1 &
      echo $AUTOCATS_DIR
      #env
      DISPLAY=:1 GHIDRA_INSTALL_DIR=$(find $WS -maxdepth 1 -type d -name 'ghidra_*') gradle -PKAIJU_AUTOCATS_DIR=$AUTOCATS_DIR --build-cache test
      kill %%
    displayName: Run Kaiju tests
    workingDirectory: .
    env:
      WS: $(Pipeline.Workspace)
  - script: gradle --stop
  - publish: dist/
  - task: GitHubRelease@0
    condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
    inputs:
      gitHubConnection: gh
      repositoryName: $(Build.Repository.Name)
      action: delete
      tagSource: manual
      tag: ghidra-$(ghidraVersion)
    continueOnError: true
  - task: DownloadSecureFile@1
    condition: eq(variables['Build.SourceBranchName'], 'main')
    name: deployKey
    inputs:
      secureFile: 'deploy.key'
  - bash: |
      mkdir -p ~/.ssh
      ssh-keyscan github.com >> ~/.ssh/known_hosts
      ssh-agent -a $SSH_AUTH_SOCK > /dev/null
      chmod og-r $(deployKey.secureFilePath)
      ssh-add $(deployKey.secureFilePath)
      git config --global user.email "eschwartz@cert.org"
      git config --global user.name "eschwartz"
      git remote add ssh-origin git@github.com:sei-eschwartz/kaiju.git
      git push --delete ssh-origin ghidra-$(ghidraVersion)
      rm -f $(deployKey.secureFilePath)
    condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
    env:
      SSH_AUTH_SOCK: /tmp/ssh_agent.sock
    continueOnError: true
    displayName: Delete old git tag ghidra-$(ghidraVersion)
  - task: GitHubRelease@0
    condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
    inputs:
      gitHubConnection: gh
      repositoryName: $(Build.Repository.Name)
      action: create
      target: $(Build.SourceVersion)
      tagSource: manual
      tag: ghidra-$(ghidraVersion)
      title: CERT Kaiju binary analysis extension for Ghidra $(ghidraVersion)
      assets: dist/*.zip
      addChangeLog: false
